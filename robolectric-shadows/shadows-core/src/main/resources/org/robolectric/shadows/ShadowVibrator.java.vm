package org.robolectric.shadows;

import android.os.Vibrator;
import android.os.SystemVibrator;

#if ($api >= 21)
import android.media.AudioAttributes;
#end

import org.robolectric.annotation.Implementation;
import org.robolectric.annotation.Implements;

@Implements(Vibrator.class)
public abstract class ShadowVibrator {

    protected boolean vibrating;
    protected boolean cancelled;
    private long milliseconds;
    private long[] pattern;
    private int repeat;

    @Implementation
    public boolean hasVibrator() {
      return true;
    }

    @Implementation
    public void vibrate(long milliseconds) {
      vibrating = true;
      this.milliseconds = milliseconds;
    }

    @Implementation
    public void vibrate(long[] pattern, int repeat) {
      vibrating = true;
      this.pattern = pattern;
      this.repeat = repeat;
    }

  #if ($api >= 21)
    @Implementation
    public void vibrate(int i, String s, long l, AudioAttributes audioAttributes) {

    }

    @Implementation
    public void vibrate(int i, String s, long[] longs, int i1, AudioAttributes audioAttributes) {

    }
  #elseif ($api >= 18)
    @Implementation
    public void vibrate(int i, String s, long l) {

    }

    @Implementation
    public void vibrate(int i, String s, long[] l, int i1) {

    }
  #end

    public abstract void cancel();

    public boolean isVibrating() {
      return vibrating;
    }

    public boolean isCancelled() {
      return cancelled;
    }

    public long getMilliseconds() {
      return milliseconds;
    }

    public long[] getPattern() {
      return pattern;
    }

    public int getRepeat() {
      return repeat;
    }

    @Implements(SystemVibrator.class)
    public static class ShadowSystemVibrator extends ShadowVibrator {

      @Implementation
      public void cancel() {
        cancelled = true;
        vibrating = false;
      }
  }
}

